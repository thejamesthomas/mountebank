# OSX agents don't have nvm pre-installed, and installing it manually
# gives a lot more control over testing packaging options
language: ruby

env:
  global:
    - MB_SLOW_TEST_TIMEOUT=5000
    # AWS_ACCESS_KEY
    - secure: "H0iUwBPOwRf3+5HGqAXWU65dJIA+4SUltehM3+jiTXsqkxeHux3WqVOouaLlw2n8WaG9y1KMXEZzed6L8p8A3I6V2M+Y1n8qNYT8y/HjCTw4d3U0tiG6ef1ysIChdBOdlwXJT5GPLlLT0y+R4IgPfHd3DMx/aiEgT3O4gGZEchs="

# Roughly ordered slowest to fastest to kick off the slow jobs first,
# except include nodes that trigger other CIs in first 5 since they start in parallel
matrix:
  include:
    - os: osx
      sudo: true
      env:
        - NODE_VERSION=4.0
        - MB_GRUNT_TASK='test:pkg deploy:s3'
        - MB_SKIP_W3C_TESTS=true
    - os: osx
      sudo: false
      env:
        - NODE_VERSION=4.0
        - MB_GRUNT_TASK='test:tarball:x64 deploy:s3'
        - MB_SKIP_W3C_TESTS=true
    - os: osx
      sudo: false
      env:
        - NODE_VERSION=0.12
        - MB_SKIP_W3C_TESTS=true
    - os: linux
      sudo: false
      env:
        - NODE_VERSION=4.0
        - MB_GRUNT_TASK='test:npm dist:zip:x64 dist:zip:x86 deploy:s3 trigger:appveyor'
        - MB_SKIP_W3C_TESTS=true
        # APPVEYOR_API_TOKEN
        - secure: "A4hhAF4npjjpiV+X6u1dt4sHYUDLyB+0mIdovXSbR/eh1jTn1ZnaCwZD8G248N+yf5Kj1jTsUUzT4mxkWSO9uzxA93W7CimLH7iBjPVyOEemuXBlBqxPJAAweB6BhiGpiuPZk2SeC0SVa+gwC+KL3oy/PW4dz8Q5ytL/IE9b3/o="
    - os: linux
      sudo: true
      env:
        - NODE_VERSION=4.0
        - MB_INSTALL_RPM=true
        - MB_GRUNT_TASK='test:deb dist:package:rpm deploy:s3 trigger:snapci deploy:heroku deploy:npm'
        - MB_SKIP_W3C_TESTS=true
        # HEROKU_API_KEY
        - secure: "BQunTTpCSGjhIYiBAXKxuuOluJIhKXdW/94GCsPlK1N8Ln20/nj/0U4qnSH7yASWQWssVG4ttm/cAbjfi+3DS4KDLtBGK1i3IoM+cJ2ADCeG7BHsqJDB0f9JyAkULjIRdkqilzR/tyD+w78pPHd7QbfplLvqUcnt7HVxw9lp4PY="
        # NPM_API_KEY
        - secure: "IEfctrje4QulHyavIMZYnxljU4XvpMnLR8TzCU8ozeQbdoIOq3/WqBl53Mou2Ie65YAbcMNfLmAvXWgNiKR2jE+K9tOyXsIj+Wbrr4b6X1FHqjkTLw8OCcLFD7kO/aptEOzsTZWbpJKao3mtcshHWWiFeeRDANYK6QMSYwoVNLc="
        # SNAPCI_API_KEY
        - secure: "AuiPAwCsw2q2xCu765d+jWdM7Hf0bKRfjN0Uwofv1ONUSWvbHDVbfK5GcJqGWvE0surDovgmWdPr9nUJxyUVQ4ONOWn3afQXvrBqXPoPjPuhXhnYNwa1HuH2GmpbL6WnmEJJCvqgw6KUVW3YJeUO+IUVQdfgkJxBYBXAuzkZ+oA="
    - os: linux
      sudo: false
      env:
        - NODE_VERSION=4.0
        - MB_GRUNT_TASK='test:tarball:x64 dist:tarball:x86 deploy:s3 coveralls'
        - MB_SKIP_W3C_TESTS=true
    - os: linux
      sudo: false
      env:
        - NODE_VERSION=0.12
        - MB_SKIP_W3C_TESTS=true
    - os: linux
      sudo: false
      env:
        - NODE_VERSION=0.10
    - os: osx
      sudo: false
      env:
        - NODE_VERSION=0.10
        - MB_SKIP_W3C_TESTS=true

install:
  - rm -rf ~/.nvm
  - git clone https://github.com/creationix/nvm.git ~/.nvm
  - source ~/.nvm/nvm.sh
  - nvm install $NODE_VERSION
  - node --version
  - bundle install --without development
  - if [ "$MB_INSTALL_RPM" = "true" ]; then sudo apt-get update && sudo apt-get install rpm; fi
  - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then export MB_DEPLOY=true; else export MB_DEPLOY=false; fi
  - if [ "$TRAVIS_PULL_REQUEST" = "false" -a -n "`git describe --tags --exact-match 2>/dev/null`" ]; then export MB_PUBLISH=true; else export MB_PUBLISH=false; fi

script:
  - echo "MB_DEPLOY - $MB_DEPLOY"
  - echo "MB_PUBLISH - $MB_PUBLISH"
  - ./build $MB_GRUNT_TASK
